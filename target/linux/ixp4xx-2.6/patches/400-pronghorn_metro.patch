diff -Nur linux-2.6.21.1/Documentation/arm/IXP4xx linux-2.6.21.1-owrt/Documentation/arm/IXP4xx
--- linux-2.6.21.1/Documentation/arm/IXP4xx	2007-06-10 13:54:49.000000000 +0200
+++ linux-2.6.21.1-owrt/Documentation/arm/IXP4xx	2007-06-10 13:46:37.000000000 +0200
@@ -111,6 +111,9 @@
    the platform has two mini-PCI slots used for 802.11[bga] cards.
    Finally, there is an IDE port hanging off the expansion bus.
 
+ADI Engineering Pronghorn Metro Platform
+http://www.adiengineering.com/php-bin/ecomm4/productDisplay.php?category_id=30&product_id=85
+
 Gateworks Avila Network Platform
 http://www.gateworks.com/avila_sbc.htm
 
diff -Nur linux-2.6.21.1/arch/arm/mach-ixp4xx/Kconfig linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/Kconfig
--- linux-2.6.21.1/arch/arm/mach-ixp4xx/Kconfig	2007-06-10 13:54:47.000000000 +0200
+++ linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/Kconfig	2007-06-10 13:46:37.000000000 +0200
@@ -57,6 +57,14 @@
 	  WG302 v2 or WAG302 v2 Access Points. For more information
 	  on this platform, see http://openwrt.org
 
+config MACH_PRONGHORNMETRO
+	bool "Pronghorn Metro"
+	select PCI
+	help
+	  Say 'Y' here if you want your kernel to support the ADI 
+	  Engineering Pronghorn Metro Platform. For more
+	  information on this platform, see <file:Documentation/arm/IXP4xx>.
+
 config ARCH_IXDP425
 	bool "IXDP425"
 	help
diff -Nur linux-2.6.21.1/arch/arm/mach-ixp4xx/Makefile linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/Makefile
--- linux-2.6.21.1/arch/arm/mach-ixp4xx/Makefile	2007-06-10 13:54:47.000000000 +0200
+++ linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/Makefile	2007-06-10 13:46:37.000000000 +0200
@@ -14,6 +14,7 @@
 obj-pci-$(CONFIG_MACH_NAS100D)		+= nas100d-pci.o
 obj-pci-$(CONFIG_MACH_GATEWAY7001)	+= gateway7001-pci.o
 obj-pci-$(CONFIG_MACH_WG302V2)		+= wg302v2-pci.o
+obj-pci-$(CONFIG_MACH_PRONGHORNMETRO)	+= pronghornmetro-pci.o
 
 obj-y	+= common.o
 
@@ -26,5 +27,6 @@
 obj-$(CONFIG_MACH_NAS100D)	+= nas100d-setup.o nas100d-power.o
 obj-$(CONFIG_MACH_GATEWAY7001)	+= gateway7001-setup.o
 obj-$(CONFIG_MACH_WG302V2)	+= wg302v2-setup.o
+obj-$(CONFIG_MACH_PRONGHORNMETRO)	+= pronghornmetro-setup.o
 
 obj-$(CONFIG_PCI)		+= $(obj-pci-$(CONFIG_PCI)) common-pci.o
diff -Nur linux-2.6.21.1/arch/arm/mach-ixp4xx/pronghornmetro-pci.c linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/pronghornmetro-pci.c
--- linux-2.6.21.1/arch/arm/mach-ixp4xx/pronghornmetro-pci.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/pronghornmetro-pci.c	2007-06-10 13:50:08.000000000 +0200
@@ -0,0 +1,74 @@
+/*
+ * arch/arch/mach-ixp4xx/pronghornmetro-pci.c
+ *
+ * PCI setup routines for ADI Engineering Pronghorn Metro
+ *
+ * Copyright (C) 2007 Imre Kaloz <kaloz@openwrt.org>
+ *
+ * based on coyote-pci.c:
+ *	Copyright (C) 2002 Jungo Software Technologies.
+ *	Copyright (C) 2003 MontaVista Softwrae, Inc.
+ *
+ * Maintainer: Imre Kaloz <kaloz@openwrt.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ */
+
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/init.h>
+#include <linux/irq.h>
+
+#include <asm/mach-types.h>
+#include <asm/hardware.h>
+#include <asm/irq.h>
+
+#include <asm/mach/pci.h>
+
+extern void ixp4xx_pci_preinit(void);
+extern int ixp4xx_setup(int nr, struct pci_sys_data *sys);
+extern struct pci_bus *ixp4xx_scan_bus(int nr, struct pci_sys_data *sys);
+
+void __init pronghornmetro_pci_preinit(void)
+{
+	set_irq_type(IRQ_IXP4XX_GPIO4, IRQT_LOW);
+	set_irq_type(IRQ_IXP4XX_GPIO6, IRQT_LOW);
+	set_irq_type(IRQ_IXP4XX_GPIO11, IRQT_LOW);
+	set_irq_type(IRQ_IXP4XX_GPIO1, IRQT_LOW);
+
+	ixp4xx_pci_preinit();
+}
+
+static int __init pronghornmetro_map_irq(struct pci_dev *dev, u8 slot, u8 pin)
+{
+	if (slot == 13)
+		return IRQ_IXP4XX_GPIO4;
+	else if (slot == 14)
+		return IRQ_IXP4XX_GPIO6;
+	else if (slot == 15)
+		return IRQ_IXP4XX_GPIO11;
+	else if (slot == 16)
+		return IRQ_IXP4XX_GPIO1;
+	else return -1;
+}
+
+struct hw_pci pronghornmetro_pci __initdata = {
+	.nr_controllers = 1,
+	.preinit =        pronghornmetro_pci_preinit,
+	.swizzle =        pci_std_swizzle,
+	.setup =          ixp4xx_setup,
+	.scan =           ixp4xx_scan_bus,
+	.map_irq =        pronghornmetro_map_irq,
+};
+
+int __init pronghornmetro_pci_init(void)
+{
+	if (machine_is_pronghorn_metro())
+		pci_common_init(&pronghornmetro_pci);
+	return 0;
+}
+
+subsys_initcall(pronghornmetro_pci_init);
diff -Nur linux-2.6.21.1/arch/arm/mach-ixp4xx/pronghornmetro-setup.c linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/pronghornmetro-setup.c
--- linux-2.6.21.1/arch/arm/mach-ixp4xx/pronghornmetro-setup.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.21.1-owrt/arch/arm/mach-ixp4xx/pronghornmetro-setup.c	2007-06-10 13:51:51.000000000 +0200
@@ -0,0 +1,108 @@
+/*
+ * arch/arm/mach-ixp4xx/pronghornmetro-setup.c
+ *
+ * Board setup for the ADI Engineering Pronghorn Metro
+ *
+ * Copyright (C) 2007 Imre Kaloz <Kaloz@openwrt.org>
+ *
+ * based on coyote-setup.c:
+ *      Copyright (C) 2003-2005 MontaVista Software, Inc.
+ *
+ * Author: Imre Kaloz <Kaloz@openwrt.org>
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/device.h>
+#include <linux/serial.h>
+#include <linux/tty.h>
+#include <linux/serial_8250.h>
+#include <linux/slab.h>
+
+#include <asm/types.h>
+#include <asm/setup.h>
+#include <asm/memory.h>
+#include <asm/hardware.h>
+#include <asm/irq.h>
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/flash.h>
+
+static struct flash_platform_data pronghornmetro_flash_data = {
+	.map_name	= "cfi_probe",
+	.width		= 2,
+};
+
+static struct resource pronghornmetro_flash_resource = {
+	.flags		= IORESOURCE_MEM,
+};
+
+static struct platform_device pronghornmetro_flash = {
+	.name		= "IXP4XX-Flash",
+	.id		= 0,
+	.dev		= {
+		.platform_data = &pronghornmetro_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &pronghornmetro_flash_resource,
+};
+
+static struct resource pronghornmetro_uart_resource = {
+	.start	= IXP4XX_UART2_BASE_PHYS,
+	.end	= IXP4XX_UART2_BASE_PHYS + 0x0fff,
+	.flags	= IORESOURCE_MEM,
+};
+
+static struct plat_serial8250_port pronghornmetro_uart_data[] = {
+	{
+		.mapbase	= IXP4XX_UART2_BASE_PHYS,
+		.membase	= (char *)IXP4XX_UART2_BASE_VIRT + REG_OFFSET,
+		.irq		= IRQ_IXP4XX_UART2,
+		.flags		= UPF_BOOT_AUTOCONF | UPF_SKIP_TEST,
+		.iotype		= UPIO_MEM,
+		.regshift	= 2,
+		.uartclk	= IXP4XX_UART_XTAL,
+	},
+	{ },
+};
+
+static struct platform_device pronghornmetro_uart = {
+	.name		= "serial8250",
+	.id		= PLAT8250_DEV_PLATFORM,
+	.dev			= {
+		.platform_data	= pronghornmetro_uart_data,
+	},
+	.num_resources	= 1,
+	.resource	= &pronghornmetro_uart_resource,
+};
+
+static struct platform_device *pronghornmetro_devices[] __initdata = {
+	&pronghornmetro_flash,
+	&pronghornmetro_uart,
+};
+
+static void __init pronghornmetro_init(void)
+{
+	ixp4xx_sys_init();
+
+	pronghornmetro_flash_resource.start = IXP4XX_EXP_BUS_BASE(0);
+	pronghornmetro_flash_resource.end = IXP4XX_EXP_BUS_BASE(0) + SZ_16M - 1;
+
+	*IXP4XX_EXP_CS0 |= IXP4XX_FLASH_WRITABLE;
+	*IXP4XX_EXP_CS1 = *IXP4XX_EXP_CS0;
+
+	platform_add_devices(pronghornmetro_devices, ARRAY_SIZE(pronghornmetro_devices));
+}
+
+#ifdef CONFIG_MACH_PRONGHORNMETRO
+MACHINE_START(PRONGHORNMETRO, "ADI Engineering Pronghorn Metro")
+	/* Maintainer: Imre Kaloz <kaloz@openwrt.org> */
+	.phys_io	= IXP4XX_PERIPHERAL_BASE_PHYS,
+	.io_pg_offst	= ((IXP4XX_PERIPHERAL_BASE_VIRT) >> 18) & 0xfffc,
+	.map_io		= ixp4xx_map_io,
+	.init_irq	= ixp4xx_init_irq,
+	.timer		= &ixp4xx_timer,
+	.boot_params	= 0x0100,
+	.init_machine	= pronghornmetro_init,
+MACHINE_END
+#endif
diff -Nur linux-2.6.21.1/include/asm-arm/arch-ixp4xx/uncompress.h linux-2.6.21.1-owrt/include/asm-arm/arch-ixp4xx/uncompress.h
--- linux-2.6.21.1/include/asm-arm/arch-ixp4xx/uncompress.h	2007-06-10 13:54:52.000000000 +0200
+++ linux-2.6.21.1-owrt/include/asm-arm/arch-ixp4xx/uncompress.h	2007-06-10 13:49:37.000000000 +0200
@@ -40,7 +40,7 @@
 	/*
 	 * Some boards are using UART2 as console
 	 */
-	if (machine_is_adi_coyote() || machine_is_gtwx5715() || machine_is_gateway7001() || machine_is_wg302v2())
+	if (machine_is_adi_coyote() || machine_is_gtwx5715() || machine_is_gateway7001() || machine_is_wg302v2() || machine_is_pronghorn_metro())
 		uart_base = (volatile u32*) IXP4XX_UART2_BASE_PHYS;
 	else
 		uart_base = (volatile u32*) IXP4XX_UART1_BASE_PHYS;
