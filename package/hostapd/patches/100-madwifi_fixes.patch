Index: hostapd-0.5.7/driver_madwifi.c
===================================================================
--- hostapd-0.5.7.orig/driver_madwifi.c	2007-06-04 13:22:31.768025808 +0200
+++ hostapd-0.5.7/driver_madwifi.c	2007-06-04 13:22:32.051982640 +0200
@@ -21,12 +21,9 @@
 #include <include/compat.h>
 #include <net80211/ieee80211.h>
 #ifdef WME_NUM_AC
-/* Assume this is built against BSD branch of madwifi driver. */
-#define MADWIFI_BSD
-#include <net80211/_ieee80211.h>
-#endif /* WME_NUM_AC */
 #include <net80211/ieee80211_crypto.h>
 #include <net80211/ieee80211_ioctl.h>
+#endif /* WME_NUM_AC */
 
 #ifdef IEEE80211_IOCTL_SETWMMPARAMS
 /* Assume this is built against madwifi-ng */
@@ -169,6 +166,11 @@
 	return 0;
 }
 
+static int madwifi_get_inact_sec(void *priv, const u8 *addr)
+{
+	return 0;
+}
+
 static int
 set80211param(struct madwifi_driver_data *drv, int op, int arg)
 {
@@ -1258,7 +1260,6 @@
 		goto bad;
 	}
 
-	madwifi_set_iface_flags(drv, 0);	/* mark down during setup */
 	madwifi_set_privacy(drv->iface, drv, 0); /* default to no privacy */
 
 	hapd->driver = &drv->ops;
@@ -1281,7 +1282,6 @@
 
 	drv->hapd->driver = NULL;
 
-	(void) madwifi_set_iface_flags(drv, 0);
 	if (drv->ioctl_sock >= 0)
 		close(drv->ioctl_sock);
 	if (drv->sock_recv != NULL && drv->sock_recv != drv->sock_xmit)
@@ -1367,6 +1367,7 @@
 	.get_ssid		= madwifi_get_ssid,
 	.set_countermeasures	= madwifi_set_countermeasures,
 	.sta_clear_stats        = madwifi_sta_clear_stats,
+	.get_inact_sec		= madwifi_get_inact_sec,
 	.commit			= madwifi_commit,
 };
 
